{"version":3,"sources":["Card.jsx","Row.js","assets/playlist.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","fontFamily","fontSize","lineHeight","textAlign","minWidth","backgroundColor","color","bullet","display","margin","transform","title","fontWeight","marginBlockStart","marginBlockEnd","marginInlineStart","marginInlineEnd","pos","marginBottom","description","artist","size","width","height","OutlinedCard","song","classes","Card","className","variant","CardContent","uri","view","theme","content","createdAt","gridContainer","paddingTop","paddingLeft","paddingRight","Row","songsToRender","Grid","container","spacing","justify","map","index","item","xs","sm","md","lg","key","playlistData","arrayForSongs","App","useState","songsToShow","setSongsToShow","next","setNext","loopWithSlice","start","end","slicedSongs","slice","useEffect","loadMore","length","hasMore","loader","type","href","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc20f16b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport SpotifyPlayer from 'react-spotify-player';\n\nconst useStyles = makeStyles({\n  root: {\n    fontFamily: \"'Roboto', sans-serif\",\n    fontSize: '0.9rem',\n    lineHeight: 1.4,\n    textAlign: 'left',\n    minWidth: 275,\n    backgroundColor: 'black',\n    color: '#FFFFFF'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    display : 'block',\n    fontWeight: \"bolder\",\n    marginBlockStart: '1em',\n    marginBlockEnd: '1em',\n    marginInlineStart: '0px',\n    marginInlineEnd: '0px',\n    fontSize: '1.17em'\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  description: {\n      margin: '0.5rem 0 0.25rem'\n  },\n  artist : {\n      color: '#999'\n  },\n});\nconst size = {\n    width: '100%',\n    height: 300,\n  };\n  const view = 'list'; // or 'coverart'\n  const theme = 'black'; // or 'white'\n\n// Add date and lnks maybe idk\n\nexport default function OutlinedCard( {song} ) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>    \n        <SpotifyPlayer\n            uri={song.uri}\n            size={size}\n            view={view}\n            theme={theme}\n        />\n        <div className = {classes.title}>\n            {song.title}\n        </div>\n        <div className = {classes.artist}>\n            {song.artist}\n        </div>\n        <div className = {classes.description}>\n            {song.content}\n        </div>\n        <div className = {classes.artist}>\n            {song.createdAt}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Card from './Card';\nimport { Grid } from \"@material-ui/core\" \nimport { makeStyles } from \"@material-ui/core/styles\"\nimport './row.css';\n\nconst useStyles = makeStyles(\n  {\n    gridContainer: {\n      paddingTop:'60px',\n      paddingLeft: '40px',\n      paddingRight: '40px'\n    }  \n  }\n) \n\nconst Row = ({ songsToRender }) => {\n  const classes = useStyles();\n  return (\n    <Grid container spacing = {4} className = {classes.gridContainer} justify = \"center\">\n        {\n          songsToRender.map((song, index) => ( \n          <Grid item xs = {12} sm = {6} md = {4} lg = {3} key = {index}>\n            <Card song = {song}/>\n          </Grid>  \n        ))}\n    </Grid>\n  );\n}\n  \n\nexport default Row;\n","const playlistData = \n    [\n        {\n            \"uri\" : \"spotify:track:5mBGFJ0eurFKOTmWxY3ron\",\n            \"artist\" : \"Mac Miller\",\n            \"title\" : \"Once A Day\",\n            \"content\" : \"This is the last song of the late Mac Miller`s last album \\\"Circles\\\". The last note of this song/album is the transition chord(Aaug7) which makes this song unfinished    . I find it somehow peotic, that it kind of resembles Mac`s life. Unfinished. Rest in peace.\",\n            \"createdAt\" : \"April 2020\"\n        },\n        {\n            \"uri\" : \"spotify:track:1AdYZ6X00nXmO613Y7GJOl\",\n            \"artist\" : \"blink-182\",\n            \"title\" : \"I Miss You\",\n            \"content\" : \"I wanted to include this song because it was the first 'punk rock' song i have ever listened in my teenage years and it pretty much defined who I was going to become in the later stages of my life. \",\n            \"createdAt\" : \"April 2020\"\n\n        },\n        {\n            \"uri\" : \"spotify:track:46OFHBw45fNi7QNjSetITR\",\n            \"artist\" : \"Kanye\",\n            \"title\" : \"Hey Mama\",\n            \"content\" : \"Kanye before the fame & heartbreak and 808. One of Kanye`s lesser known tracks where he simply tells an story about his mother, and their struggles when he was younger. I don`t believe this is the best version of Kanye, but I am pretty sure this is the purest version of Kanye. I highly recommend watching 2008 Grammys where he performed this song right after his mom passed away. Truly emotional stuff.\",\n            \"createdAt\" : \"April 2020\"\n\n        },\n        {\n            \"uri\" : \"spotify:track:6tIehjffeLrtHDx34P3HOt\",\n            \"artist\" : \"OHHYUK, CIFIKA\",\n            \"title\" : \"Momom\",\n            \"content\" : \"One of the lesser known song by the lead singer of 'Hyukoh'\",\n            \"createdAt\" : \"April 2020\"\n\n        },\n        {\n            \"uri\" : \"spotify:track:0QpYkajexWrB0P3TWvkHlm\",\n            \"artist\" : \"J. Cole\",\n            \"title\" : \"Rich Niggaz\",\n            \"content\" : \"This track is from Cole`s third/fourth (idk) album 'Born Sinner', which was one of his most solid, all around good album. As the name implies, the song is about the contrast between rich and poor. I don`t know what to say really. It is J. Cole ffs\",\n            \"createdAt\" : \"April 2020\"\n\n        },\n        {\n            \"uri\" : \"spotify:track:2QDiQ50Xv9ICj8lINq1YDK\",\n            \"artist\" : \"Redbone\",\n            \"title\" : \"Come and Get Your Love\",\n            \"content\" : \"All good times & love. This song holds a very special place in my heart.\",\n            \"createdAt\" : \"April 2020\"\n\n        },\n        {\n            \"uri\" : \"spotify:track:1kxeWHF9PrCVZHvVskv8lg\",\n            \"artist\" : \"Kanye\",\n            \"title\" : \"Love Lockdown\",\n            \"content\" : \"Vintage Kanye.\",\n            \"createdAt\" : \"April 2020\"\n\n        },\n        {\n            \"uri\" : \"spotify:track:1mazAW31oI50KA3YLB6UTZ\",\n            \"artist\" : \"Park Hye Jin\",\n            \"title\" : \"ABC\",\n            \"content\" : \"This track, ABC, is from South Korean DJ, Park Hye Jin`s first micro-album. The piano sample kind of hypnotizes you along with her soothing voice.\",\n            \"createdAt\" : \"April 2020\"\n\n        },\n        {\n            \"uri\" : \"spotify:track:1q1T0TbFO2fWkDmgCKwTB0\",\n            \"artist\" : \"Trent Reznor and Atticus Ross\",\n            \"title\" : \"Epiphany\",\n            \"content\" : \"This track is from the latest Pixar movie 'Soul'. The song is played during our main protagonist realizes that life is worth living just because, and this song captures that hauntingly. Major props to Trent Reznor and Atticus Ross. \",\n            \"createdAt\" : \"April 2020\"\n\n        },\n        {\n            \"uri\" : \"spotify:track:7eqoqGkKwgOaWNNHx90uEZ\",\n            \"artist\" : \"Frank Ocean\",\n            \"title\" : \"Nights\",\n            \"content\" : \"9th track of Frank Ocean`s 17 track album, 'Blonde'. The first 8 songs of the album are somewhat more light-toned and 'Day' themed songs. However, by the mark '3:30' of Nights, not only the tone of the song but the whole album shifts into 'Night', which is is exactly the middle of the album if you add the lengths of the song.\",\n            \"createdAt\" : \"April 2020\"\n        }\n    ]\nexport default playlistData","import React, { useState, useEffect } from 'react';\nimport Row from './Row';\nimport './App.css';\nimport playlistData from './assets/playlist.js';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport Loader from \"react-loader-spinner\";\n\nconst songsPerPage = 3;\nlet arrayForSongs = [];\nfunction App() {\n  const [songsToShow, setSongsToShow] = useState([]);\n  const [next, setNext] = useState(3);\n\n  const loopWithSlice = (start, end) => {\n    const slicedSongs = playlistData.slice(start, end);\n    arrayForSongs = [...arrayForSongs, ...slicedSongs];\n    setSongsToShow(arrayForSongs);\n  };\n\n  useEffect(() => {\n    loopWithSlice(0, songsPerPage)\n  }, []);\n\nconst handleShowMoreSongs = () => {\n  if (songsToShow && songsToShow.length >= playlistData.length) {\n    // Do not load if there's no more items\n    return;\n  }  \n  loopWithSlice(next, next + songsPerPage);\n  setNext(next + songsPerPage) \n};\n  return (\n    <div className=\"App\">\n      <div className = \"App-container\">\n        <header className=\"App-header\">\n          <h1>\n            tushig is listening\n          </h1>\n        </header>\n        <InfiniteScroll\n          loadMore={handleShowMoreSongs}\n          hasMore= {songsToShow && songsToShow.length < playlistData.length}\n          loader={\n            <Loader\n            type=\"Puff\"\n            color=\"#FFFFFF\"\n            height={100}\n            width={100}\n          />\n          }\n        >\n          <Row songsToRender = {songsToShow} />\n        </InfiniteScroll>\n        <div className = \"shameless-plugging\">\n          <p className=\"p-footer\">\n              <small>\n                <a href=\"https://www.instagram.com/binariesinspace/\" target=\"blank\"\n                  >Instagram\n                </a>\n              </small>|\n              <small>\n                <a href=\"https://github.com/luffy1727/tushig-listens\" target=\"blank\"\n                  >GitHub\n                </a>\n              </small>\n            </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}